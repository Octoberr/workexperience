docker 端口映射   宿主机：容器
http://localhost:5000/?date=2017-06-15

docker run --restart always -p 8014:8014 --name='schedule_20170927_prod' schedule_schedule


python F:\github\Chinese-Character-Recognition\chinese_character_recognition_bn.py --mode=train --max_steps=16002 --eval_steps=100 --save_steps=500

上传文件：rz
列出储存： docker volume ls
查看详细信息： docker volume inspect
启动容器: docker-compose up -d 不要日志
			 down 关闭 
下载文件:sz
进入docker容器：docker exec -it hopeful_hugle /bin/bash


openface  http://blog.topspeedsnail.com/archives/10933
提取和aligned
./util/align-dlib.py ./dataimage/train/ align outerEyesAndNose ./dataimage/aligned-images/ --size 96
提取特征
./batch-represent/main.lua -outDir ./dataimage/generated-embeddings/ -data ./dataimage/aligned-images/
开始训练
./demos/classifier.py train ./dataimage/generated-embeddings/
识别
./demos/classifier.py infer ./dataimage/generated-embeddings/classifier.pkl ./dataimage/test/test5.jpg

docker copy 
容器到本机：
docker cp ccaa9c6f5372:/root/openface/demos/web ./web

主机到容器：挂载mv
docker run -v  本机地址：容器地址
docker cp 要拷贝的文件路径 容器名：要拷贝到容器里面对应的路径

openface demo web:
/root/openface/demos/web/start-servers.sh

openface run:
docker run -p 9000:9000 -p 8000:8000 -v F:\github\swmopenface\demos:/root/openface/demos -t -i bamos/openface /bin/bash

docker国内镜像：https://docker.mirrors.ustc.edu.cn
systemctl daemon-reload
vim /etc/docker/daemon.json
{
 "registry-mirrors": ["https://docker.mirrors.ustc.edu.cn"]
}

docker进入系统
docker run -it YOUR_IMAGE /bin/sh

th neural_style.lua -style_image swmstyle/style8.jpg -content_image swmdata/data1.jpg -output_image swmgetdata/get1.png -model_file models/nin_imagenet_conv.caffemodel -proto_file models/train_val.prototxt -gpu -1 -backend clnn -num_iterations 1000 -seed 123 -content_layers relu0,relu3,relu7,relu12 -style_layers relu0,relu3,relu7,relu12 -content_weight 10 -style_weight 1000 -image_size 512 -optimizer adam
清华镜像：pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package
pip安装不要缓存:--no-cache-dir
启动ubuantu虚拟环境：source ~/tensorflow/bin/activate 

docker tag swm/websocket:20171106 116.62.70.120:5000/swm/websocket:20171106

查看linux版本信息：lsb_release -a
cat /proc/version

conda install opencv3
conda install numpy
conda install anaconda-client
conda install --channel https://conda.anaconda.org/menpo opencv3

docker修改镜像名字
-d 服务器挂起在后台
docker tag imageid name:tag

scrapy crawl TweetScraper -a query="Trump"

ssr启动：/etc/init.d/shadowsocks-r start | stop | restart | status
docker对镜像的操作
.保存save - 加载 load
wget java --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie"

docker run --restart always --name='telegram_swm_0724' -v /home/telegram/:/home/telegram/ -d telegram:20180724
安装lsb_realease : yum install -y redhat-lsb

修改root密码： passwd root

build 包：python setup.py bdist_wheel
上传或者更新到pypitest
pip install twine
pypi test:twine upload --repository-url https://test.pypi.org/legacy/ dist/*
上传或者更新pypi
twine upload dist/*

安装：pip install twine
pypi的账号gmail,username:october

github主页
https://github.com/Octoberr?tab=repositories
python社区pypi主页
https://pypi.org/project/swmtools/
docker社区dockerhub主页
https://hub.docker.com/u/shiyue
Just My Socks
账号：gmail judy

唉
Today`s wind is a little uproarious. 

容器内ssh启动
/etc/init.d/ssh restart

修改iptables 
/etc/sysconfig/iptables  
-A INPUT -p udp -m state --state NEW -m udp --dport 4556 -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 4556 -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 8009 -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 8010 -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 10022 -j ACCEPT
curl http://your-server-ip:5000/v2/_catalog

拉取server上的镜像
修改文件 /etc/docker/daemon.json
  "insecure-registries": [
    "115.144.178.45:5000"
  ]
 
 
linux 计数 find _serverinput -type f | wc -l

不同linux之间拷贝文件
文件：scp local_file remote_username@remote_ip:remote_folder
文件夹：scp -r local_folder remote_username@remote_ip:remote_folder 
从远处到本地：scp root@192.168.120.204:/opt/soft/nginx-0.5.38.tar.gz /opt/soft/

网络测试： curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -


python打包出现错误，将python3.7降为python3.6.8
然后重新安装pyinstaller
pip install https://github.com/pyinstaller/pyinstaller/archive/develop.zip

mysql查询最后一行
select   *   from   table   order   by   id   desc   limit   1


zmap扫描命令示例:
sudo zmap 192.168.90.0/24 -p 146 --max-sendto-failures=1 -B 10M -w /home/idownclient/resource/wi -b /home/idownclient/resource/bi -o /home/idownclient/_clienttmpdir/zmap/532e4db2-bd02-11ea-9910-0242ac120002

nmap扫描命令示例：
nmap 192.168.90.253 -p 20,21,22,23,25,53,80,110,123,143,443,993,995,1433,3389,6379,27017 -Pn -n -T4 -sV -O --open --min-rate 100 --min-hostgroup 256 --max-retries 2 --max-scan-delay 1 -oX /home/idownclient/_clienttmpdir/nmap/e19011aa-be6d-11ea-addb-d8cb8ad590d8

删除为None的镜像 docker images|grep none|awk '{print $3}'|xargs docker rmi
删除容器docker rm $(docker ps -a -q) 或者 docker rm $(docker ps -aq) 


自己的动态代理
luminati_proxy_dict = {
    'http': 'http://lum-customer-hl_c92b4743-zone-static:68xg9bkhsa26@zproxy.lum-superproxy.io:22225',
    'https': 'http://lum-customer-hl_c92b4743-zone-static:68xg9bkhsa26@zproxy.lum-superproxy.io:22225'
}

#压缩
tar -czvf ***.tar.gz
tar -cjvf ***.tar.bz2
#解压缩
tar -xzvf ***.tar.gz -C 指定文件夹（要先创建）
tar -xjvf ***.tar.bz2

使用物理机网卡启动Docker
docker run --name idownclient --restart always --net=host -v /home/idownclient:/home/idownclient -d idownclient:201027

git ssl error 的解决方法

git config http.sslVerify "false"
如果提示：fatal: not in a git directory
先执行git init
再输入：git config http.sslVerify "false"

app抓包
模拟器 charles
1、charles安装ssl证书，模拟器安装ssl证书，模拟器安装xposed 和just trust me
2、charles设置代理，模拟器设置代理去连charles
3、安装app就可以抓包了 

conda 安装环境
conda create -n 环境名字 python=3.6.4 request

git 生成sshkey
1、cd ~/.ssh/
# 2/3可以忽略
2、git config --global user.name "用户名"
3、git config --global user.email "你的公司或个人邮箱"

生成key
4、ssh-keygen -t rsa -C "github邮箱账户"

5、复制id_rsa.pub的数据到github生成key即可进行ssh拉取

accept:
zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7

fastapi https
uvicorn zhiliao:app --host 0.0.0.0 --port 8080 --ssl-keyfile /ssl/private.key --ssl-certfile /ssl/certificate.crt



中国科学技术大学 : https://pypi.mirrors.ustc.edu.cn/simple
豆瓣：http://pypi.douban.com/simple/


后台启动程序除了screen还有nohup
nohup ./my-shell-script.sh & 输出日志到默认文件
nohup ./program >/dev/null 2>&1 & 不输出日志

docker 解决时区不一致的问题
1，最傻瓜也最方便的处理方式，运行新的容器前设置本机时区和时间文件与容器的映射docker run -v/etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime ...1-v/etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime 命令为文件映射的命令，后面在写自己的启动代码。2，拷贝文件到已经存在的容器docker cp /etc/localtime [containerId]:/etc/localtimedocker cp /etc/timezone [containerId]:/etc/timezone12以上将宿主机的时间与本地时间绑定到容器中，这样时间就会跟宿主机一样了。/etc/timezone // 时区/etc/localtime // 时间12验证时间是否正确,在控制台输入以下命令即可[root@izbp11gsqdkmgt6b1r4kajz ~]# date2018-09-07 09:49:32



# go使用国内镜像作为go mod
# 启用 Go Modules 功能
go env -w GO111MODULE=on

# 配置 GOPROXY 环境变量，以下三选一

# 1. 七牛 CDN
go env -w  GOPROXY=https://goproxy.cn,direct

# 2. 阿里云
go env -w GOPROXY=https://mirrors.aliyun.com/goproxy/,direct

# 3. 官方
go env -w  GOPROXY=https://goproxy.io,direct

git submodule update --init

统计当前目录下文件的个数（不包括目录）
ls -l | grep "^-" | wc -l
统计当前目录下文件的个数（包括子目录）
ls -lR| grep "^-" | wc -l
查看某目录下文件夹(目录)的个数（包括子目录）
ls -lR | grep "^d" | wc -l


ls -l
长列表输出该目录下文件信息(注意这里的文件是指目录、链接、设备文件等)，每一行对应一个文件或目录，ls -lR是列出所有文件，包括子目录。

grep "^-"
过滤ls的输出信息，只保留一般文件，只保留目录是grep "^d"。

wc -l
统计输出信息的行数，统计结果就是输出信息的行数，一行信息对应一个文件，所以就是文件的个数。

screen 操作命令
 screen -S session_name　创建一个session
Ctrl-a c(小写)        新建 bash screen 终端
Ctrl-a "       列出所有的窗口
Ctrl-a A       重命名  
Ctrl-a 空格     窗口切换
Ctrl+a 0-9 ：在第0个窗口和第9个窗口之间切换
Ctrl+a K(大写) ：关闭当前窗口，并且切换到下一个窗口（当退出最后一个窗口时，该终端自动终止，并且退回到原始shell状态）
exit ：关闭当前窗口，并且切换到下一个窗口（当退出最后一个窗口时，该终端自动终止，并且退回到原始shell状态）

Ctrl-a d        断开所有 screen 终端，返回 screen 执行前状态，但 screen 内所有终端的任务都在执行
screen -ls     列出当前用户的所有 screen 实例，包括联接和断开的
screen -R     重新联接到已断开的 screen 实例，如果有多个已断开的 screen 实例，则用 区分



